<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="frameBottom" width="1278" height="30" titletext="frameBottom" onload="form_onload" scrolltype="none">
    <Layouts>
      <Layout height="30" width="1278">
        <Static id="staStatus" taborder="0" left="0" top="0" right="0" bottom="0" cssclass="sta_BF_Bg"/>
        <Button id="Button00" taborder="1" text="연장" top="6" width="32" height="18" right="20" cssclass="btn_BF_Extend"/>
        <Static id="Static02" taborder="2" top="1" height="29" cssclass="sta_BF_Section" text="세션만료시간 | 26:30" width="143" right="60"/>
        <Button id="btnNotice" taborder="3" text="알림 1" top="6" width="52" height="18" right="228" cssclass="btn_BF_Extend" onclick="btnNotice_onclick"/>
        <Button id="btn00" taborder="4" text="btn00" left="905" top="6" width="70" height="17" onclick="btn00_onclick"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[/**
*  Necacro EduPack
*  @MenuPath    frame > frameBottom
*  @FileName 	frameBottom.xfdl 
*  @Creator 	Education
*  @CreateDate 	2022.05.02
*  @Desction    
************** 소스 수정 이력 ***********************************************
*  date          		Modifier                Description
*******************************************************************************
*  2022.05.02     	Education 	            	최초 생성 
*  2022.08.10     	Education 	            	스크립트 정비
*******************************************************************************
*/


/************************************************************************************************
* FORM 변수 선언 영역
************************************************************************************************/

/***********************************************************************************************
* FORM EVENT 영역(onload)
/***********************************************************************************************/
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	this.gfnFormOnLoad(this);
	
	if ((nexacro._OS == "Android" || nexacro._OS == "iOS") && (nexacro._Browser == "Runtime"))  
	{      
		this.XPush00.set_layouturl("%USERAPP%XPushUrl/XPush_Message_Layout.xml");
	} else   
	{    
		this.XPush00.set_layouturl("XPushUrl::XPush_Message_Layout.xml");
	}     
	
	this.XPush00.set_projectid("TOBE_EDU");
	trace("projectid : [" + this.XPush00.projectid + "]\nprotocol version : [" + this.XPush00.protocolversion + "]");
	this.XPush00.set_protocolversion(3);
	trace("projectid : [" + this.XPush00.projectid + "]\nprotocol version : [" + this.XPush00.protocolversion + "]");
	this.XPush00.set_iplist("tcp://172.10.14.132:50001, http://172.10.14.132:50000")
	
	/*
	* connection 성공, 실패는 event 에서 발생 
	*/
	this.XPush00.connect("User01", "..."); //비번은 의미없음
	
	
	
	
};
/************************************************************************************************
* TRANSACTION 서비스 호출 처리
************************************************************************************************/

/************************************************************************************************
* CALLBACK 콜백 처리부분
************************************************************************************************/

/************************************************************************************************
* 사용자 FUNCTION 영역
************************************************************************************************/
/**
* @description  알림여부에 맞게 알림창 초기화
* @param  {object} objTargetForm 타겟form
* @return none
*/
this.fnInitNoticeShow = function(objTargetForm)
{
	var objForm = objTargetForm;
	var bShow   = this.fnGetNoticeShow();
	var bAni    = false;
	this.fnSetNoticeShow(objForm, bShow, bAni);
}


/**
* @description  현재알림상태 정보 리턴
* @param  none
* @return {boolean} 여부
*/
this.fnGetNoticeShow = function()
{
	if (this.btnNotice.u_showYn == "Y"){
		return true;
	}
	return false;
}


/**
* @description  현재알림상태 정보 셋팅
* @param  {object} objForm 적용form
* @param  {boolean} bShow 표시여부
* @param  {boolean} bAni 애니메이션 적용여부
* @return none
*/
this.fnSetNoticeShow = function(objForm, bShow, bAni)
{
	//표시여부 셋팅 및 디자인적용
	if (bShow){
		this.btnNotice.u_showYn = "Y";									//알림적용여부(u_showYn : 유저프로퍼티로 사용)
		this.btnNotice.set_border("1px solid red");						//알림강조라인
		objForm.divNotice.form.staNotice.set_text(this.dsMessage.getColumn(this.dsMessage.getRowCount()-1,"MSG"));	//알림내용
	}
	else{
		this.btnNotice.u_showYn = "N";
		this.btnNotice.set_border("");
	}
	
	//animation 이용여부에 따른 표시 동작호출
	if (bAni){
		this.fnCreateAniObject(objForm);
		if (bShow){
			objForm.aniShow.play();
		}
		else{
			objForm.aniHide.play();
		}
	}
	else{
		if (bShow){
			objForm.divNotice.set_height(150);
		}
		else{
			objForm.divNotice.set_height(0);
		}
	}
}



/**
* @description Left 접고/펼치기 (frameWorkTitle에서 호출)
*/
this.fnCreateAniObject = function(objForm)
{
	//animation 미존재시 추가
	if (!objForm.aniShow){
		var objAniShow = new nexacro.Animation("aniShow", objForm);
		objForm.addChild("aniShow", objAniShow);
		objForm.aniShow.addTarget("AniItem01", objForm.divNotice, "height:150");
		objForm.aniShow.setEventHandler("oncomplete"
			, 	function(obj,e)
			{  
				//trace("끝1");
			}
			, objForm);
		
		objForm.aniShow.set_duration(500);
		
		var aniObj01 = new nexacro.Animation("aniHide", objForm);
		objForm.addChild("aniHide", aniObj01);
		objForm.aniHide.addTarget("AniItem01", objForm.divNotice, "height:0");
		objForm.aniHide.setEventHandler("oncomplete"
			, 	function(obj,e)
			{  
				//trace("끝2");
			}
			, objForm);
		objForm.aniHide.set_duration(500);	
	}
};

/************************************************************************************************
* 각 COMPONENT 별 EVENT 영역
************************************************************************************************/
/**
* @description 알림오픈버튼 클릭
*/


this.btn00_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var objChildFrame = new ChildFrame();  
	objChildFrame.init("chf_popup1", 0, 0, 900, 600, null, null, "EduBasic::XPush\\gvMes.xfdl");
	
	
	objChildFrame.set_openalign("center middle");
	objChildFrame.set_overlaycolor("RGBA(196,196,196,0.5)")
	objChildFrame.set_dragmovetype("all");
	
	var objParam = {paramOs:this.dsMessage};
	
	
	
	objChildFrame.showModal( this.getOwnerFrame()
		, objParam
		, this
		, "fn_popupCallback");	
	
	
};
this.fn_popupCallback = function(strPopupID, strReturn)
{
	if(strReturn == undefined){
		return;
	}
	
	if(strPopupID == "chf_popup1"){
		this.alert("Return Value: " + strReturn);
	}
};
this.XPush00_onsuccess = function(obj:nexacro.XPush,e:nexacro.XPushEventInfo)
{
	//trace(this.dsMessage.saveXML());
	/*
	alert("XPush00_onsuccess Event\n" + 
	" - eventid: " + e.eventid + "\n" +
	" - statuscode: " + e.statuscode + "\n" +
	" - errormsg: " + e.errormsg + "\n" +
	" - reason: " + e.reason + "\n" +
	" - action: " + e.action + "\n" +
	" - serverip: " + e.serverip + "\n" +
	" - serverport: " + e.serverport + "\n" +
	" - e.message: " + e.message + "\n" +
	" - e.command : " + e.command + "\n" +
	" - e.message : " + e.message + "\n" +
	" - e.returnvalue : " + e.returnvalue);
	*/			
	if(e.message != null) {
		trace( "e.message != null\n" + 
			" - e.message.messagetype: " + e.message.messagetype + "\n" +
			" - e.message.messagekey: " + e.message.messagekey + "\n" +
			" - e.message.messageid: " + e.message.messageid + "\n" +
			" - e.message.returnvalue: " + e.message.returnvalue + "\n" +
			" - e.message.devicetoken: " + e.message.devicetoken
		) 
	}
	
	if( e.action == 0 ) {
		trace("connect() ---------------success");
		var ret = this.XPush00.registerTopic("9999", "ALL");
		if(ret){
			this.XPush00.subscribe("9999", "ALL", this, this.dsMessage, "append", "fn_push_callback");
		}
	}
	if( e.action == 1 ) {
		trace("disconnect() success");
	}
	if( e.action == 2) {
		trace("subscribe()-------------------- success");
		this.XPush00.requestMessage("9999","ALL");//오프라인에서됨
	}
	if( e.action == 3) {
		trace("unsubscribe() success");
	}
	if( e.action == 4) {
		trace("requestMessage() success");
		//	trace("e4 : " + this.dsMessage.saveXML());
	}
	if( e.action == 5) {
		trace("sendResponse() success");
	}
	if( e.action == 6) {
		trace("reqisterDevice() success");
	}
	if( e.action == 7) {
		trace("unreqisterDevice() success");
	}
	if( e.action == 8) {
		trace("reqisterUser() success");
		this.XPush00.subscribe("9999","ALL",this,this.dsMessage,"append","fn_push_callback");
	}
	if( e.action == 9) {
		trace("unreqisterUser() success");
	}
	if( e.action == 10) {
		trace("requestMessageCount() success");
		if(e.message.returnvalue != undefined || e.message.returnvalue != null) {
			var returnvalue = e.message.returnvalue;
			trace("length : " + returnvalue.length);
			for(var i = 0; i < returnvalue.length; i++) {
				trace("index:" + i + " : " + returnvalue[i].topictype + " : " + returnvalue[i].topicid + " : " + returnvalue[i].count);
			}
		}
	}
};



this.XPush00_onerror = function(obj:nexacro.XPush,e:nexacro.XPushErrorEventInfo)
{
	
	
	if( e.action == 0 ) {
		trace("connect() -----------------error");
		var ret = this.XPush00.requestMessage("9999", "ALL");
		if(ret){
			this.XPush00.subscribe("9999", "ALL",this,this.dsMessage,"append","fn_push_callback");
		}
	}
	if( e.action == 1 ) {
		trace("disconnect() error");
	}
	if( e.action == 2) {
		trace("subscribe() error");
	}
	if( e.action == 3) {
		trace("unsubscribe() error");
	}
	if( e.action == 4) {
		trace("requestMessage() error");
	}
	if( e.action == 5) {
		trace("sendResponse() error");
	}
	if( e.action == 6) {
		trace("reqisterDevice() error");
	}
	if( e.action == 7) {
		trace("unreqisterDevice() error");
	}
	if( e.action == 8) {
		trace("reqisterUser()-------------------- error");
		this.XPush00.subscribe("9999","ALL",this,this.dsMessage,"append","fn_push_callback");
	}
	if( e.action == 9) {
		trace("unreqisterUser() error");
	}   
};

this.XPush00_onkeepalive = function(obj:nexacro.XPush,e:nexacro.XPushKeepAliveEventInfo)
{
	trace("KEEP");      
};
this.fn_push_callback = function(Row, ChangeColumn, AllColumns, Type, ActionType, MessageId) 
{
	trace("XPush00_push_callback\n" + 
		" - ActionType : " + ActionType + "\n" +
		" - Row : " + Row + "\n" +
		" - MessageId : " + MessageId + "\n" +
		"\n" + 
		this.dsMessage.saveXML()
	);
	
	
	if(this.btnNotice.u_showYn == "Y"){
		this.btnNotice_onclick(); 
	}
	
	this.btnNotice_onclick(); 
	if(ActionType == "PUSH")
	{
		//trace(this.dsMessage.saveXML());
	}
	if(ActionType == "RELI")
	{
		// 수신 확인 메시지 전송 
		this.XPush00.sendResponse(MessageId)
	}
}
/**
* @description 알림오픈버튼 클릭
*/
this.btnNotice_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//notice 표시가능한 화면존재시 노티스를 한다.
	var objTagetForm = null;
	var objApp  = this.gfnGetApplication();
	
	//FrameMain 활성화시
	if (objApp.gvVFrameSet1.separatesize == "30,*,0"){
		objTagetForm = objApp.gvMainFrame.form;
	}
	//업무화면 활성화시
	else{
		objTagetForm = objApp.gvWorkFrame.getActiveFrame().form;
	}
	
	var bAni = true;
	//this.btnNotice.u_showYn 으로 표시 여부 제어
	if (this.btnNotice.u_showYn == "Y"){
		this.fnSetNoticeShow(objTagetForm, false, bAni)
	}
	else{
		this.fnSetNoticeShow(objTagetForm, true, bAni)
	}
};]]></Script>
    <Objects>
      <XPush id="XPush00" onsuccess="XPush00_onsuccess" onerror="XPush00_onerror" onkeepalive="XPush00_onkeepalive"/>
      <Dataset id="dsMessage">
        <ColumnInfo>
          <Column id="TOPIC_ID" type="STRING" size="256"/>
          <Column id="TOPIC_TYPE" type="STRING" size="256"/>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="MSG" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
  </Form>
</FDL>
